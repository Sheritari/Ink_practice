# Generated by Django 5.0.1 on 2024-02-06 03:46

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CharacteristicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True, verbose_name='Название')),
                ('max_value_x', models.PositiveIntegerField(verbose_name='Максимальное значение по оси x')),
                ('max_value_y', models.PositiveIntegerField(verbose_name='Максимальное значение по оси y')),
                ('json_key_name', models.CharField(max_length=250, verbose_name='Ключ в json')),
                ('json_value_name', models.CharField(max_length=250, verbose_name='Значение в json')),
            ],
            options={
                'verbose_name': 'Вид характеристики',
                'verbose_name_plural': 'Виды характеристик',
                'db_table': 'characteristic_types',
            },
        ),
        migrations.CreateModel(
            name='Well',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Скважина',
                'verbose_name_plural': 'Скважины',
                'db_table': 'wells',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255, verbose_name='Имя пользователя')),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255, verbose_name='Пароль')),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Логин')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Characteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', jsonfield.fields.JSONField(verbose_name='Значение')),
                ('name', models.CharField(max_length=250, verbose_name='Название')),
                ('characteristic_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chars_catalog.characteristictype', verbose_name='Вид характеристики')),
            ],
            options={
                'verbose_name': 'Характеристика',
                'verbose_name_plural': 'Характеристики',
                'db_table': 'characteristics',
            },
        ),
        migrations.CreateModel(
            name='WellCharacteristicBinding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('characteristic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chars_catalog.characteristic', verbose_name='Характеристика')),
                ('well', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chars_catalog.well', verbose_name='Скважина')),
            ],
            options={
                'verbose_name': 'Характеристика скважины',
                'verbose_name_plural': 'Характеристики скважин',
                'db_table': 'wells_characteristics',
            },
        ),
    ]
